alias dockre=docker
dpg() {
    # Take docker output, print the first line and any line matching $@
    # Because docker ps is a bastard, recolumning (because ports are long)
    # uses a sed to turn 2+ spaces into tabs and then use column to columnize
    # on tab characters.
    docker ps -a | sed "1p;/$@/!d" | sed "s/  \+/\t/g" | column -t -s $'\t'
}

# Making docker inspect not useless, requires `jq'
di() {
    local jq_opts=.
    docker inspect $1 >/dev/null 2>&1
    if [[ $? -ne 0 ]]; then
        jq_opts=$1
        shift 1
    fi
    docker inspect $@ | jq -C $jq_opts | less -RFX
}
alias divols='di ".[].HostConfig.Binds"'
alias distate='di ".[].State"'
alias diconf='di ".[].Config"'
alias dienv='di ".[].Config.Env"'

# Making docker logs less useless
alias dl='docker logs --tail=20'
alias dlf='docker logs --tail=20 -f'
dlt() {
    tail=$1
    shift 1
    docker logs --tail=$tail $@
}
dls() {
    local amount=""
    local scale=""
    local container=""
    if [[ $# -lt 2 ]]; then
        amount=1
        scale=minutes
        container=$1
    else
        amount=${1:0:${#1}-1}
        case "${1:${#1}-1:1}" in
            s ) scale=seconds ;;
            m ) scale=minutes ;;
            h ) scale=hours ;;
            d ) scale=days ;;
            * ) scale=minutes ;;
        esac
        container=$2
    fi
    docker logs --since=$(date --date="-${amount} ${scale}" +%s) $container
}

alias rmcontainers="docker ps -a | grep Exited | awk -F '  +' '{ print $6; }' | grep -v '\.' | xargs docker rm"
alias rminone="docker images --no-trunc | grep none | awk '{ print $3; }' | xargs docker rmi"

# vim: set ft=sh:
